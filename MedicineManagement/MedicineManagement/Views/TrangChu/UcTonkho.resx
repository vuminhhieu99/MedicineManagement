<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="txtName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtMedicineGroup.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtTotalInventory.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtUnit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtPrice.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="quanLyThuocDataSetBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>184, 17</value>
  </metadata>
  <metadata name="quanLyThuocDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="quanLyThuocDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuCircleProgressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CAAAAABJRU5ErkJggg==
</value>
  </data>
</root>