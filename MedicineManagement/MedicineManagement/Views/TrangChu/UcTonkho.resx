<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="quanLyThuocDataSetBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>184, 17</value>
  </metadata>
  <metadata name="quanLyThuocDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="txtName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtMedicineGroup.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtTotalInventory.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtUnit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtPrice.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuCircleProgressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>